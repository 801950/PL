<cerea>
  ENP L0
<variable_declaration>
; -- Simple variable "r", type INT, level 0, address [3]
; -- Simple variable "a", type INT, level 0, address [4]
</variable_declaration>
<procedure>
L1:
; -- Simple parameter "t", type FUNCTION, level 1, address [3]
<recover_argument1>
; -- Recover simple val / ref variable parameter "t" (number 1)
  SRF  0  3
  ASGI
</recover_argument1>
  JMP L2
<variable_declaration>
</variable_declaration>
<procedure>
L3:
; -- Simple parameter "r", type PROCEDURE, level 2, address [3]
<recover_argument1>
; -- Recover simple val / ref variable parameter "r" (number 1)
  SRF  0  3
  ASGI
</recover_argument1>
  JMP L4
<variable_declaration>
</variable_declaration>
L4:
<instruction_block>
<put_line>
; -- Put STRING
<put>
  STC 69
  WRT  0
  STC 115
  WRT  0
  STC 116
  WRT  0
  STC 111
  WRT  0
  STC 32
  WRT  0
  STC 101
  WRT  0
  STC 115
  WRT  0
  STC 32
  WRT  0
  STC 117
  WRT  0
  STC 110
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 112
  WRT  0
  STC 114
  WRT  0
  STC 117
  WRT  0
  STC 101
  WRT  0
  STC 98
  WRT  0
  STC 97
  WRT  0
  STC 58
  WRT  0
  STC 32
  WRT  0
</put>
<put>
; --Variable / parameter "r"
  SRF  0  3
  DRF
; -- Put INTEGER
  WRT  1
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
  CSF
</instruction_block>
</procedure>
L2:
<instruction_block>
<procedure_call_f2>
<argument_1>
; --Variable / parameter "t"
  SRF  0  3
  DRF
  STC  5
  TMS
</argument_1>
  OSF  4  0 L3
</procedure_call_f2>
<return>
; --Variable / parameter "t"
  SRF  0  3
  DRF
  STC  2
  TMS
  CSF
</return>
  CSF
</instruction_block>
</procedure>
L0:
<Asignacion_a_variable_simple_r>
; -- Address of variable / parameter "r"
  SRF  0  3
  STC  1
  ASG
</Asignacion_a_variable_simple_r>
<Asignacion_a_variable_simple_a>
; -- Address of variable / parameter "a"
  SRF  0  4
  STC  2
  ASG
</Asignacion_a_variable_simple_a>
<put_line>
<put>
; --Variable / parameter "a"
  SRF  0  4
  DRF
; -- Put INTEGER
  WRT  1
</put>
<put>
<function_call_f1>
<argument_1>
; --Variable / parameter "r"
  SRF  0  3
  DRF
</argument_1>
  OSF  5  0 L1
</function_call_f1>
; -- Put INTEGER
  WRT  1
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
  LVP
</cerea>
