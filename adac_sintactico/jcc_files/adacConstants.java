/* Generated By:JavaCC: Do not edit this line. adacConstants.java */
package traductor;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface adacConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int tCOM = 4;
  /** RegularExpression Id. */
  int LETTER = 5;
  /** RegularExpression Id. */
  int DIGIT = 6;
  /** RegularExpression Id. */
  int ALNUM = 7;
  /** RegularExpression Id. */
  int tPOPEN = 8;
  /** RegularExpression Id. */
  int tPCLOSE = 9;
  /** RegularExpression Id. */
  int tC2 = 10;
  /** RegularExpression Id. */
  int tC1 = 11;
  /** RegularExpression Id. */
  int tCOMA = 12;
  /** RegularExpression Id. */
  int tCORCHETEOPEN = 13;
  /** RegularExpression Id. */
  int tCORCHETECLOSE = 14;
  /** RegularExpression Id. */
  int tNUM = 15;
  /** RegularExpression Id. */
  int tBEGIN = 16;
  /** RegularExpression Id. */
  int tBOOL = 17;
  /** RegularExpression Id. */
  int tCHAR = 18;
  /** RegularExpression Id. */
  int tINT = 19;
  /** RegularExpression Id. */
  int tEOL = 20;
  /** RegularExpression Id. */
  int tFUNC = 21;
  /** RegularExpression Id. */
  int tPROC = 22;
  /** RegularExpression Id. */
  int tIS = 23;
  /** RegularExpression Id. */
  int tVAL = 24;
  /** RegularExpression Id. */
  int tREF = 25;
  /** RegularExpression Id. */
  int tRET = 26;
  /** RegularExpression Id. */
  int tINT2CHAR = 27;
  /** RegularExpression Id. */
  int tCHAR2INT = 28;
  /** RegularExpression Id. */
  int tIF = 29;
  /** RegularExpression Id. */
  int tTHEN = 30;
  /** RegularExpression Id. */
  int tELSE = 31;
  /** RegularExpression Id. */
  int tEND = 32;
  /** RegularExpression Id. */
  int tWHILE = 33;
  /** RegularExpression Id. */
  int tDO = 34;
  /** RegularExpression Id. */
  int tASIG = 35;
  /** RegularExpression Id. */
  int tPUTLINE = 36;
  /** RegularExpression Id. */
  int tPUT = 37;
  /** RegularExpression Id. */
  int tGET = 38;
  /** RegularExpression Id. */
  int tAND = 39;
  /** RegularExpression Id. */
  int tOR = 40;
  /** RegularExpression Id. */
  int tNOT = 41;
  /** RegularExpression Id. */
  int tMAYEQ = 42;
  /** RegularExpression Id. */
  int tMENEQ = 43;
  /** RegularExpression Id. */
  int tEQ = 44;
  /** RegularExpression Id. */
  int tMAY = 45;
  /** RegularExpression Id. */
  int tMEN = 46;
  /** RegularExpression Id. */
  int tDIST = 47;
  /** RegularExpression Id. */
  int tTRUE = 48;
  /** RegularExpression Id. */
  int tFALSE = 49;
  /** RegularExpression Id. */
  int tSUM = 50;
  /** RegularExpression Id. */
  int tRES = 51;
  /** RegularExpression Id. */
  int tMUL = 52;
  /** RegularExpression Id. */
  int tDIV = 53;
  /** RegularExpression Id. */
  int tMOD = 54;
  /** RegularExpression Id. */
  int tSTRING = 55;
  /** RegularExpression Id. */
  int tCARACTER = 56;
  /** RegularExpression Id. */
  int tID = 57;
  /** RegularExpression Id. */
  int tERROR = 58;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "<tCOM>",
    "<LETTER>",
    "<DIGIT>",
    "<ALNUM>",
    "\"(\"",
    "\")\"",
    "\"\\\"\"",
    "\"\\\'\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "<tNUM>",
    "\"begin\"",
    "\"boolean\"",
    "\"character\"",
    "\"integer\"",
    "\";\"",
    "\"function\"",
    "\"procedure\"",
    "\"is\"",
    "\"val\"",
    "\"ref\"",
    "\"return\"",
    "\"int2char\"",
    "\"char2int\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"end\"",
    "\"while\"",
    "\"do\"",
    "\":=\"",
    "\"put_line\"",
    "\"put\"",
    "\"get\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\">=\"",
    "\"<=\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"<>\"",
    "\"true\"",
    "\"false\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"div\"",
    "\"mod\"",
    "<tSTRING>",
    "<tCARACTER>",
    "<tID>",
    "<tERROR>",
  };

}
