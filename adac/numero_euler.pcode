<?xml version="1.0" encoding="UTF-8"?>
<numero_euler>
  ENP L0
<variable_declaration>
; -- Simple variable "n", type INT, level 0, address [3]
; -- Array variable "e", type INT, size 101, level 0, address [4:104]!
; -- Array variable "sumando", type INT, size 101, level 0, address [105:205]!
; -- Array variable "resultado", type INT, size 101, level 0, address [206:306]!
; -- Simple variable "ndigitos", type INT, level 0, address [307]
</variable_declaration>
<procedure>
L1:
; -- Ref array parameter "s", type INT, class REF, size 101, level 1, address [3]
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L2
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [4]
</variable_declaration>
L2:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L3:
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; --Variable / parameter "ndigitos"
  SRF  1 307
  DRF
  LTE
</condition>
  JMF L4
<while_instruction_block>
<Asignacion_a_variable_simple_s>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  STC  0
  ASG
</Asignacion_a_variable_simple_s>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L3
L4:
</while>
  CSF
</instruction_block>
</procedure>
<procedure>
L5:
; -- Ref array parameter "s", type INT, class REF, size 101, level 1, address [3]
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L6
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [4]
</variable_declaration>
L6:
<instruction_block>
<put>
<put>
  STC  0
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
; -- Put INTEGER
  WRT  1
</put>
<put>
  STC 46
; -- Put CHAR
  WRT  0
</put>
</put>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
  STC  1
  ASG
</Asignacion_a_variable_simple_i>
<while>
L7:
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; --Variable / parameter "ndigitos"
  SRF  1 307
  DRF
  LTE
</condition>
  JMF L8
<while_instruction_block>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  SBT
  STC  5
  MOD
  STC  0
  EQ
</condition>
  JMF L9
<then>
<put>
; -- Put STRING
<put>
  STC 32
  WRT  0
</put>
</put>
  JMP L10
</then>
<else>
L9:
</else>
L10:
</if-then>
<put>
<put>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
; -- Put INTEGER
  WRT  1
</put>
</put>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L7
L8:
</while>
<put>
<put>
  STC 13
; -- Put CHAR
  WRT  0
</put>
<put>
  STC 10
; -- Put CHAR
  WRT  0
</put>
</put>
  CSF
</instruction_block>
</procedure>
<procedure>
L11:
; -- Ref array parameter "s", type INT, class REF, size 101, level 1, address [3]
; -- Ref array parameter "r", type INT, class REF, size 101, level 1, address [4]
<recover_argument_2>
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L12
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [5]
; -- Simple variable "n", type INT, level 1, address [6]
</variable_declaration>
L12:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  5
; --Variable / parameter "ndigitos"
  SRF  1 307
  DRF
  ASG
</Asignacion_a_variable_simple_i>
<while>
L13:
<condition>
; --Variable / parameter "i"
  SRF  0  5
  DRF
  STC  0
  GT
</condition>
  JMF L14
<while_instruction_block>
<Asignacion_a_variable_simple_n>
; -- Address of variable / parameter "n"
  SRF  0  6
; --Variable / parameter "i"
  SRF  0  5
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "i"
  SRF  0  5
  DRF
; -- Initial address of array "r"
  SRF  0  4
  DRF
  PLUS
  DRF
  PLUS
  ASG
</Asignacion_a_variable_simple_n>
<if-then>
<condition>
; --Variable / parameter "n"
  SRF  0  6
  DRF
  STC  9
  GT
</condition>
  JMF L15
<then>
<Asignacion_a_variable_simple_s>
; --Variable / parameter "i"
  SRF  0  5
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "n"
  SRF  0  6
  DRF
  STC 10
  MOD
  ASG
</Asignacion_a_variable_simple_s>
<Asignacion_a_variable_simple_s>
; --Variable / parameter "i"
  SRF  0  5
  DRF
  STC  1
  SBT
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0  5
  DRF
  STC  1
  SBT
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "n"
  SRF  0  6
  DRF
  STC 10
  DIV
  PLUS
  ASG
</Asignacion_a_variable_simple_s>
  JMP L16
</then>
<else>
L15:
<Asignacion_a_variable_simple_s>
; --Variable / parameter "i"
  SRF  0  5
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "n"
  SRF  0  6
  DRF
  ASG
</Asignacion_a_variable_simple_s>
</else>
L16:
</if-then>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  5
; --Variable / parameter "i"
  SRF  0  5
  DRF
  STC  1
  SBT
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L13
L14:
</while>
  CSF
</instruction_block>
</procedure>
<procedure>
L17:
; -- Ref array parameter "s", type INT, class REF, size 101, level 1, address [3]
; -- Ref array parameter "r", type INT, class REF, size 101, level 1, address [4]
; -- Simple parameter "n", type PROCEDURE, level 1, address [5]
<recover_argument_3>
; -- Recover simple val / ref variable parameter "n" (number 3)
  SRF  0  5
  ASGI
</recover_argument_3>
<recover_argument_2>
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L18
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [6]
</variable_declaration>
L18:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  6
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L19:
<condition>
; --Variable / parameter "i"
  SRF  0  6
  DRF
; --Variable / parameter "ndigitos"
  SRF  1 307
  DRF
  LT
</condition>
  JMF L20
<while_instruction_block>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  6
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "n"
  SRF  0  5
  DRF
  DIV
  STC  0
  GT
</condition>
  JMF L21
<then>
<Asignacion_a_variable_simple_r>
; --Variable / parameter "i"
  SRF  0  6
  DRF
; -- Initial address of array "r"
  SRF  0  4
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0  6
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "n"
  SRF  0  5
  DRF
  DIV
  ASG
</Asignacion_a_variable_simple_r>
<Asignacion_a_variable_simple_s>
; --Variable / parameter "i"
  SRF  0  6
  DRF
  STC  1
  PLUS
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0  6
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "n"
  SRF  0  5
  DRF
  MOD
  STC 10
  TMS
; --Variable / parameter "i"
  SRF  0  6
  DRF
  STC  1
  PLUS
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
  PLUS
  ASG
</Asignacion_a_variable_simple_s>
  JMP L22
</then>
<else>
L21:
<Asignacion_a_variable_simple_r>
; --Variable / parameter "i"
  SRF  0  6
  DRF
; -- Initial address of array "r"
  SRF  0  4
  DRF
  PLUS
  STC  0
  ASG
</Asignacion_a_variable_simple_r>
<Asignacion_a_variable_simple_s>
; --Variable / parameter "i"
  SRF  0  6
  DRF
  STC  1
  PLUS
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0  6
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
  STC 10
  TMS
; --Variable / parameter "i"
  SRF  0  6
  DRF
  STC  1
  PLUS
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
  DRF
  PLUS
  ASG
</Asignacion_a_variable_simple_s>
</else>
L22:
</if-then>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  6
; --Variable / parameter "i"
  SRF  0  6
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L19
L20:
</while>
  CSF
</instruction_block>
</procedure>
<procedure>
L23:
; -- Ref array parameter "s", type INT, class REF, size 101, level 1, address [3]
; -- Ref array parameter "r", type INT, class REF, size 101, level 1, address [4]
<recover_argument_2>
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L24
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [5]
</variable_declaration>
L24:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  5
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L25:
<condition>
; --Variable / parameter "i"
  SRF  0  5
  DRF
; --Variable / parameter "ndigitos"
  SRF  1 307
  DRF
  LTE
</condition>
  JMF L26
<while_instruction_block>
<Asignacion_a_variable_simple_s>
; --Variable / parameter "i"
  SRF  0  5
  DRF
; -- Initial address of array "s"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0  5
  DRF
; -- Initial address of array "r"
  SRF  0  4
  DRF
  PLUS
  DRF
  ASG
</Asignacion_a_variable_simple_s>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  5
; --Variable / parameter "i"
  SRF  0  5
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L25
L26:
</while>
  CSF
</instruction_block>
</procedure>
L0:
<Asignacion_a_variable_simple_ndigitos>
; -- Address of variable / parameter "ndigitos"
  SRF  0 307
  STC 20
  ASG
</Asignacion_a_variable_simple_ndigitos>
<put_line>
; -- Put STRING
<put>
  STC 65
  WRT  0
  STC 112
  WRT  0
  STC 114
  WRT  0
  STC 111
  WRT  0
  STC 120
  WRT  0
  STC 105
  WRT  0
  STC 109
  WRT  0
  STC 97
  WRT  0
  STC 99
  WRT  0
  STC 105
  WRT  0
  STC 243
  WRT  0
  STC 110
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 108
  WRT  0
  STC 32
  WRT  0
  STC 110
  WRT  0
  STC 250
  WRT  0
  STC 109
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 111
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 69
  WRT  0
  STC 117
  WRT  0
  STC 108
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 32
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 117
  WRT  0
  STC 116
  WRT  0
  STC 105
  WRT  0
  STC 108
  WRT  0
  STC 105
  WRT  0
  STC 122
  WRT  0
  STC 97
  WRT  0
  STC 110
  WRT  0
  STC 100
  WRT  0
  STC 111
  WRT  0
  STC 32
  WRT  0
  STC 108
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 115
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 105
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 105
  WRT  0
  STC 110
  WRT  0
  STC 102
  WRT  0
  STC 105
  WRT  0
  STC 110
  WRT  0
  STC 105
  WRT  0
  STC 116
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 61
  WRT  0
  STC 32
  WRT  0
  STC 49
  WRT  0
  STC 47
  WRT  0
  STC 48
  WRT  0
  STC 33
  WRT  0
  STC 32
  WRT  0
  STC 43
  WRT  0
  STC 32
  WRT  0
  STC 49
  WRT  0
  STC 47
  WRT  0
  STC 49
  WRT  0
  STC 33
  WRT  0
  STC 32
  WRT  0
  STC 43
  WRT  0
  STC 32
  WRT  0
  STC 49
  WRT  0
  STC 47
  WRT  0
  STC 50
  WRT  0
  STC 33
  WRT  0
  STC 32
  WRT  0
  STC 43
  WRT  0
  STC 32
  WRT  0
  STC 49
  WRT  0
  STC 47
  WRT  0
  STC 51
  WRT  0
  STC 33
  WRT  0
  STC 32
  WRT  0
  STC 46
  WRT  0
  STC 46
  WRT  0
  STC 46
  WRT  0
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<put_line>
; -- Put STRING
<put>
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<procedure_call_iniciar>
<argument_1>
; --Variable / parameter "sumando"
  SRF  0 105
</argument_1>
  OSF 308  0 L1
</procedure_call_iniciar>
<procedure_call_iniciar>
<argument_1>
; --Variable / parameter "e"
  SRF  0  4
</argument_1>
  OSF 308  0 L1
</procedure_call_iniciar>
<Asignacion_a_variable_simple_sumando>
  STC  0
; -- Initial address of array "sumando"
  SRF  0 105
  PLUS
  STC  1
  ASG
</Asignacion_a_variable_simple_sumando>
<Asignacion_a_variable_simple_e>
  STC  0
; -- Initial address of array "e"
  SRF  0  4
  PLUS
  STC  2
  ASG
</Asignacion_a_variable_simple_e>
<Asignacion_a_variable_simple_n>
; -- Address of variable / parameter "n"
  SRF  0  3
  STC  1
  ASG
</Asignacion_a_variable_simple_n>
<while>
L27:
<condition>
; --Variable / parameter "n"
  SRF  0  3
  DRF
; --Variable / parameter "ndigitos"
  SRF  0 307
  DRF
  LT
</condition>
  JMF L28
<while_instruction_block>
<procedure_call_dividir>
<argument_1>
; --Variable / parameter "sumando"
  SRF  0 105
</argument_1>
<argument_2>
; --Variable / parameter "resultado"
  SRF  0 206
</argument_2>
<argument_3>
; --Variable / parameter "n"
  SRF  0  3
  DRF
</argument_3>
  OSF 308  0 L17
</procedure_call_dividir>
<procedure_call_sumar>
<argument_1>
; --Variable / parameter "e"
  SRF  0  4
</argument_1>
<argument_2>
; --Variable / parameter "resultado"
  SRF  0 206
</argument_2>
  OSF 308  0 L11
</procedure_call_sumar>
<put>
; -- Put STRING
<put>
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 99
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 32
  WRT  0
</put>
<put>
; --Variable / parameter "n"
  SRF  0  3
  DRF
  STC  1
  PLUS
; -- Put INTEGER
  WRT  1
</put>
; -- Put STRING
<put>
  STC 32
  WRT  0
  STC 99
  WRT  0
  STC 111
  WRT  0
  STC 109
  WRT  0
  STC 112
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 101
  WRT  0
  STC 110
  WRT  0
  STC 116
  WRT  0
  STC 101
  WRT  0
  STC 115
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 108
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 115
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 105
  WRT  0
  STC 101
  WRT  0
  STC 58
  WRT  0
  STC 32
  WRT  0
</put>
</put>
<procedure_call_mostrar_numero>
<argument_1>
; --Variable / parameter "e"
  SRF  0  4
</argument_1>
  OSF 308  0 L5
</procedure_call_mostrar_numero>
<procedure_call_asignar>
<argument_1>
; --Variable / parameter "sumando"
  SRF  0 105
</argument_1>
<argument_2>
; --Variable / parameter "resultado"
  SRF  0 206
</argument_2>
  OSF 308  0 L23
</procedure_call_asignar>
<Asignacion_a_variable_simple_n>
; -- Address of variable / parameter "n"
  SRF  0  3
; --Variable / parameter "n"
  SRF  0  3
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_n>
</while_instruction_block>
  JMP L27
L28:
</while>
<put_line>
; -- Put STRING
<put>
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<put_line>
; -- Put STRING
<put>
  STC 76
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 99
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 118
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 103
  WRT  0
  STC 101
  WRT  0
  STC 110
  WRT  0
  STC 99
  WRT  0
  STC 105
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 101
  WRT  0
  STC 115
  WRT  0
  STC 32
  WRT  0
  STC 114
  WRT  0
  STC 225
  WRT  0
  STC 112
  WRT  0
  STC 105
  WRT  0
  STC 100
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 112
  WRT  0
  STC 111
  WRT  0
  STC 114
  WRT  0
  STC 113
  WRT  0
  STC 117
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 108
  WRT  0
  STC 111
  WRT  0
  STC 115
  WRT  0
  STC 32
  WRT  0
  STC 116
  WRT  0
  STC 233
  WRT  0
  STC 114
  WRT  0
  STC 109
  WRT  0
  STC 105
  WRT  0
  STC 110
  WRT  0
  STC 111
  WRT  0
  STC 115
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 108
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 115
  WRT  0
  STC 117
  WRT  0
  STC 109
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 115
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 32
  WRT  0
  STC 49
  WRT  0
  STC 47
  WRT  0
  STC 107
  WRT  0
  STC 33
  WRT  0
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
  LVP
</numero_euler>
