<?xml version="1.0" encoding="UTF-8"?>
<juego_de_la_vida>
  ENP L0
<variable_declaration>
; -- Array variable "colonia", type BOOL, size 80, level 0, address [3:82]!
; -- Simple variable "i", type INT, level 0, address [83]
; -- Simple variable "iteraciones", type INT, level 0, address [84]
; -- Simple variable "elementos", type INT, level 0, address [85]
</variable_declaration>
<procedure>
L1:
; -- Ref array parameter "colonia", type BOOL, class REF, size 80, level 1, address [3]
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L2
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [4]
</variable_declaration>
L2:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L3:
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; --Variable / parameter "elementos"
  SRF  1 85
  DRF
  LT
</condition>
  JMF L4
<while_instruction_block>
<Asignacion_a_variable_simple_colonia>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC 20
  MOD
  STC  0
  EQ
  ASG
</Asignacion_a_variable_simple_colonia>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L3
L4:
</while>
  CSF
</instruction_block>
</procedure>
<procedure>
L5:
; -- Ref array parameter "colonia", type BOOL, class REF, size 80, level 1, address [3]
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L6
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [4]
</variable_declaration>
L6:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L7:
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC 80
  LT
</condition>
  JMF L8
<while_instruction_block>
<Asignacion_a_variable_simple_colonia>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC 37
  GTE
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC 43
  LTE
  AND
  ASG
</Asignacion_a_variable_simple_colonia>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L7
L8:
</while>
  CSF
</instruction_block>
</procedure>
<procedure>
L9:
; -- Ref array parameter "colonia", type BOOL, class REF, size 80, level 1, address [3]
; -- Val array parameter "siguiente", type BOOL, class VAL, size80, level 1, address [4:83]
<recover_argument_2>
; --  Recover array val variable parameter "siguiente" (number 2)
  SRF  0 83
  ASGI
  SRF  0 82
  ASGI
  SRF  0 81
  ASGI
  SRF  0 80
  ASGI
  SRF  0 79
  ASGI
  SRF  0 78
  ASGI
  SRF  0 77
  ASGI
  SRF  0 76
  ASGI
  SRF  0 75
  ASGI
  SRF  0 74
  ASGI
  SRF  0 73
  ASGI
  SRF  0 72
  ASGI
  SRF  0 71
  ASGI
  SRF  0 70
  ASGI
  SRF  0 69
  ASGI
  SRF  0 68
  ASGI
  SRF  0 67
  ASGI
  SRF  0 66
  ASGI
  SRF  0 65
  ASGI
  SRF  0 64
  ASGI
  SRF  0 63
  ASGI
  SRF  0 62
  ASGI
  SRF  0 61
  ASGI
  SRF  0 60
  ASGI
  SRF  0 59
  ASGI
  SRF  0 58
  ASGI
  SRF  0 57
  ASGI
  SRF  0 56
  ASGI
  SRF  0 55
  ASGI
  SRF  0 54
  ASGI
  SRF  0 53
  ASGI
  SRF  0 52
  ASGI
  SRF  0 51
  ASGI
  SRF  0 50
  ASGI
  SRF  0 49
  ASGI
  SRF  0 48
  ASGI
  SRF  0 47
  ASGI
  SRF  0 46
  ASGI
  SRF  0 45
  ASGI
  SRF  0 44
  ASGI
  SRF  0 43
  ASGI
  SRF  0 42
  ASGI
  SRF  0 41
  ASGI
  SRF  0 40
  ASGI
  SRF  0 39
  ASGI
  SRF  0 38
  ASGI
  SRF  0 37
  ASGI
  SRF  0 36
  ASGI
  SRF  0 35
  ASGI
  SRF  0 34
  ASGI
  SRF  0 33
  ASGI
  SRF  0 32
  ASGI
  SRF  0 31
  ASGI
  SRF  0 30
  ASGI
  SRF  0 29
  ASGI
  SRF  0 28
  ASGI
  SRF  0 27
  ASGI
  SRF  0 26
  ASGI
  SRF  0 25
  ASGI
  SRF  0 24
  ASGI
  SRF  0 23
  ASGI
  SRF  0 22
  ASGI
  SRF  0 21
  ASGI
  SRF  0 20
  ASGI
  SRF  0 19
  ASGI
  SRF  0 18
  ASGI
  SRF  0 17
  ASGI
  SRF  0 16
  ASGI
  SRF  0 15
  ASGI
  SRF  0 14
  ASGI
  SRF  0 13
  ASGI
  SRF  0 12
  ASGI
  SRF  0 11
  ASGI
  SRF  0 10
  ASGI
  SRF  0  9
  ASGI
  SRF  0  8
  ASGI
  SRF  0  7
  ASGI
  SRF  0  6
  ASGI
  SRF  0  5
  ASGI
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L10
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [84]
</variable_declaration>
L10:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 84
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L11:
<condition>
; --Variable / parameter "i"
  SRF  0 84
  DRF
; --Variable / parameter "elementos"
  SRF  1 85
  DRF
  LT
</condition>
  JMF L12
<while_instruction_block>
<Asignacion_a_variable_simple_colonia>
; --Variable / parameter "i"
  SRF  0 84
  DRF
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "i"
  SRF  0 84
  DRF
; -- Initial address of array "siguiente"
  SRF  0  4
  PLUS
  DRF
  ASG
</Asignacion_a_variable_simple_colonia>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 84
; --Variable / parameter "i"
  SRF  0 84
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L11
L12:
</while>
  CSF
</instruction_block>
</procedure>
<procedure>
L13:
; -- Ref array parameter "colonia", type BOOL, class REF, size 80, level 1, address [3]
; -- Simple parameter "i", type FUNCTION, level 1, address [4]
<recover_argument_2>
; -- Recover simple val / ref variable parameter "i" (number 2)
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
; --  Recover array ref variable parameter "colonia" (number 1)
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L14
<variable_declaration>
</variable_declaration>
L14:
<instruction_block>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  0
  EQ
</condition>
  JMF L15
<then>
<return>
  STC  0
  CSF
</return>
  JMP L16
</then>
<else>
L15:
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; --Variable / parameter "elementos"
  SRF  1 85
  DRF
  STC  1
  SBT
  EQ
</condition>
  JMF L17
<then>
<return>
  STC  0
  CSF
</return>
  JMP L18
</then>
<else>
L17:
<return>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
  DRF
  NGB
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  SBT
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
  DRF
  NGB
  AND
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  SBT
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
  DRF
  NGB
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
  DRF
  AND
  OR
  AND
  CSF
</return>
</else>
L18:
</if-then>
</else>
L16:
</if-then>
  CSF
</instruction_block>
</procedure>
<procedure>
L19:
; -- Ref array parameter "colonia", type BOOL, class REF, size 80, level 1, address [3]
; -- Simple parameter "i", type FUNCTION, level 1, address [4]
<recover_argument_2>
; -- Recover simple val / ref variable parameter "i" (number 2)
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
; --  Recover array ref variable parameter "colonia" (number 1)
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L20
<variable_declaration>
; -- Simple variable "vivos", type INT, level 1, address [5]
</variable_declaration>
L20:
<instruction_block>
<Asignacion_a_variable_simple_vivos>
; -- Address of variable / parameter "vivos"
  SRF  0  5
  STC  0
  ASG
</Asignacion_a_variable_simple_vivos>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  0
  GT
</condition>
  JMF L21
<then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  SBT
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
</condition>
  DRF
  JMF L22
<then>
<Asignacion_a_variable_simple_vivos>
; -- Address of variable / parameter "vivos"
  SRF  0  5
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_vivos>
  JMP L23
</then>
<else>
L22:
</else>
L23:
</if-then>
  JMP L24
</then>
<else>
L21:
</else>
L24:
</if-then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  GT
</condition>
  JMF L25
<then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  2
  SBT
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
</condition>
  DRF
  JMF L26
<then>
<Asignacion_a_variable_simple_vivos>
; -- Address of variable / parameter "vivos"
  SRF  0  5
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_vivos>
  JMP L27
</then>
<else>
L26:
</else>
L27:
</if-then>
  JMP L28
</then>
<else>
L25:
</else>
L28:
</if-then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC 79
  LT
</condition>
  JMF L29
<then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
</condition>
  DRF
  JMF L30
<then>
<Asignacion_a_variable_simple_vivos>
; -- Address of variable / parameter "vivos"
  SRF  0  5
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_vivos>
  JMP L31
</then>
<else>
L30:
</else>
L31:
</if-then>
  JMP L32
</then>
<else>
L29:
</else>
L32:
</if-then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC 78
  LT
</condition>
  JMF L33
<then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  2
  PLUS
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
</condition>
  DRF
  JMF L34
<then>
<Asignacion_a_variable_simple_vivos>
; -- Address of variable / parameter "vivos"
  SRF  0  5
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_vivos>
  JMP L35
</then>
<else>
L34:
</else>
L35:
</if-then>
  JMP L36
</then>
<else>
L33:
</else>
L36:
</if-then>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "colonia"
  SRF  0  3
  DRF
  PLUS
  DRF
  NGB
</condition>
  JMF L37
<then>
<return>
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  2
  EQ
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  3
  EQ
  OR
  CSF
</return>
  JMP L38
</then>
<else>
L37:
<return>
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  2
  EQ
; --Variable / parameter "vivos"
  SRF  0  5
  DRF
  STC  4
  EQ
  OR
  CSF
</return>
</else>
L38:
</if-then>
  CSF
</instruction_block>
</procedure>
<procedure>
L39:
; -- Ref array parameter "colonia", type BOOL, class REF, size 80, level 1, address [3]
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L40
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [4]
; -- Array variable "siguiente", type BOOL, size 80, level 0, address [5:84]!
</variable_declaration>
L40:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L41:
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; --Variable / parameter "elementos"
  SRF  1 85
  DRF
  LT
</condition>
  JMF L42
<while_instruction_block>
<Asignacion_a_variable_simple_siguiente>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "siguiente"
  SRF  0  5
  PLUS
<function_call_vivira>
<argument_1>
; --Variable / parameter "colonia"
  SRF  0  3
  DRF
</argument_1>
<argument_2>
; --Variable / parameter "i"
  SRF  0  4
  DRF
</argument_2>
  OSF 85  1 L13
</function_call_vivira>
  ASG
</Asignacion_a_variable_simple_siguiente>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L41
L42:
</while>
<procedure_call_asignar>
<argument_1>
; --Variable / parameter "colonia"
  SRF  0  3
  DRF
</argument_1>
<argument_2>
; -- Variable / parameter "siguiente"
  SRF  0  5
  DRF
  SRF  0  6
  DRF
  SRF  0  7
  DRF
  SRF  0  8
  DRF
  SRF  0  9
  DRF
  SRF  0 10
  DRF
  SRF  0 11
  DRF
  SRF  0 12
  DRF
  SRF  0 13
  DRF
  SRF  0 14
  DRF
  SRF  0 15
  DRF
  SRF  0 16
  DRF
  SRF  0 17
  DRF
  SRF  0 18
  DRF
  SRF  0 19
  DRF
  SRF  0 20
  DRF
  SRF  0 21
  DRF
  SRF  0 22
  DRF
  SRF  0 23
  DRF
  SRF  0 24
  DRF
  SRF  0 25
  DRF
  SRF  0 26
  DRF
  SRF  0 27
  DRF
  SRF  0 28
  DRF
  SRF  0 29
  DRF
  SRF  0 30
  DRF
  SRF  0 31
  DRF
  SRF  0 32
  DRF
  SRF  0 33
  DRF
  SRF  0 34
  DRF
  SRF  0 35
  DRF
  SRF  0 36
  DRF
  SRF  0 37
  DRF
  SRF  0 38
  DRF
  SRF  0 39
  DRF
  SRF  0 40
  DRF
  SRF  0 41
  DRF
  SRF  0 42
  DRF
  SRF  0 43
  DRF
  SRF  0 44
  DRF
  SRF  0 45
  DRF
  SRF  0 46
  DRF
  SRF  0 47
  DRF
  SRF  0 48
  DRF
  SRF  0 49
  DRF
  SRF  0 50
  DRF
  SRF  0 51
  DRF
  SRF  0 52
  DRF
  SRF  0 53
  DRF
  SRF  0 54
  DRF
  SRF  0 55
  DRF
  SRF  0 56
  DRF
  SRF  0 57
  DRF
  SRF  0 58
  DRF
  SRF  0 59
  DRF
  SRF  0 60
  DRF
  SRF  0 61
  DRF
  SRF  0 62
  DRF
  SRF  0 63
  DRF
  SRF  0 64
  DRF
  SRF  0 65
  DRF
  SRF  0 66
  DRF
  SRF  0 67
  DRF
  SRF  0 68
  DRF
  SRF  0 69
  DRF
  SRF  0 70
  DRF
  SRF  0 71
  DRF
  SRF  0 72
  DRF
  SRF  0 73
  DRF
  SRF  0 74
  DRF
  SRF  0 75
  DRF
  SRF  0 76
  DRF
  SRF  0 77
  DRF
  SRF  0 78
  DRF
  SRF  0 79
  DRF
  SRF  0 80
  DRF
  SRF  0 81
  DRF
  SRF  0 82
  DRF
  SRF  0 83
  DRF
  SRF  0 84
  DRF
</argument_2>
  OSF 85  1 L9
</procedure_call_asignar>
  CSF
</instruction_block>
</procedure>
<procedure>
L43:
; -- Val array parameter "colonia", type BOOL, class VAL, size80, level 1, address [3:82]
<recover_argument_1>
; --  Recover array val variable parameter "colonia" (number 1)
  SRF  0 82
  ASGI
  SRF  0 81
  ASGI
  SRF  0 80
  ASGI
  SRF  0 79
  ASGI
  SRF  0 78
  ASGI
  SRF  0 77
  ASGI
  SRF  0 76
  ASGI
  SRF  0 75
  ASGI
  SRF  0 74
  ASGI
  SRF  0 73
  ASGI
  SRF  0 72
  ASGI
  SRF  0 71
  ASGI
  SRF  0 70
  ASGI
  SRF  0 69
  ASGI
  SRF  0 68
  ASGI
  SRF  0 67
  ASGI
  SRF  0 66
  ASGI
  SRF  0 65
  ASGI
  SRF  0 64
  ASGI
  SRF  0 63
  ASGI
  SRF  0 62
  ASGI
  SRF  0 61
  ASGI
  SRF  0 60
  ASGI
  SRF  0 59
  ASGI
  SRF  0 58
  ASGI
  SRF  0 57
  ASGI
  SRF  0 56
  ASGI
  SRF  0 55
  ASGI
  SRF  0 54
  ASGI
  SRF  0 53
  ASGI
  SRF  0 52
  ASGI
  SRF  0 51
  ASGI
  SRF  0 50
  ASGI
  SRF  0 49
  ASGI
  SRF  0 48
  ASGI
  SRF  0 47
  ASGI
  SRF  0 46
  ASGI
  SRF  0 45
  ASGI
  SRF  0 44
  ASGI
  SRF  0 43
  ASGI
  SRF  0 42
  ASGI
  SRF  0 41
  ASGI
  SRF  0 40
  ASGI
  SRF  0 39
  ASGI
  SRF  0 38
  ASGI
  SRF  0 37
  ASGI
  SRF  0 36
  ASGI
  SRF  0 35
  ASGI
  SRF  0 34
  ASGI
  SRF  0 33
  ASGI
  SRF  0 32
  ASGI
  SRF  0 31
  ASGI
  SRF  0 30
  ASGI
  SRF  0 29
  ASGI
  SRF  0 28
  ASGI
  SRF  0 27
  ASGI
  SRF  0 26
  ASGI
  SRF  0 25
  ASGI
  SRF  0 24
  ASGI
  SRF  0 23
  ASGI
  SRF  0 22
  ASGI
  SRF  0 21
  ASGI
  SRF  0 20
  ASGI
  SRF  0 19
  ASGI
  SRF  0 18
  ASGI
  SRF  0 17
  ASGI
  SRF  0 16
  ASGI
  SRF  0 15
  ASGI
  SRF  0 14
  ASGI
  SRF  0 13
  ASGI
  SRF  0 12
  ASGI
  SRF  0 11
  ASGI
  SRF  0 10
  ASGI
  SRF  0  9
  ASGI
  SRF  0  8
  ASGI
  SRF  0  7
  ASGI
  SRF  0  6
  ASGI
  SRF  0  5
  ASGI
  SRF  0  4
  ASGI
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L44
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [83]
</variable_declaration>
L44:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 83
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L45:
<condition>
; --Variable / parameter "i"
  SRF  0 83
  DRF
; --Variable / parameter "elementos"
  SRF  1 85
  DRF
  LT
</condition>
  JMF L46
<while_instruction_block>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0 83
  DRF
; -- Initial address of array "colonia"
  SRF  0  3
  PLUS
  DRF
</condition>
  JMF L47
<then>
<put>
<put>
  STC 42
; -- Put CHAR
  WRT  0
</put>
</put>
  JMP L48
</then>
<else>
L47:
<put>
<put>
  STC 32
; -- Put CHAR
  WRT  0
</put>
</put>
</else>
L48:
</if-then>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 83
; --Variable / parameter "i"
  SRF  0 83
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L45
L46:
</while>
<put>
<put>
  STC 13
; -- Put CHAR
  WRT  0
</put>
<put>
  STC 10
; -- Put CHAR
  WRT  0
</put>
</put>
  CSF
</instruction_block>
</procedure>
L0:
<put_line>
; -- Put STRING
<put>
  STC 73
  WRT  0
  STC 109
  WRT  0
  STC 112
  WRT  0
  STC 108
  WRT  0
  STC 101
  WRT  0
  STC 109
  WRT  0
  STC 101
  WRT  0
  STC 110
  WRT  0
  STC 116
  WRT  0
  STC 97
  WRT  0
  STC 99
  WRT  0
  STC 105
  WRT  0
  STC 243
  WRT  0
  STC 110
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 108
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 118
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 115
  WRT  0
  STC 105
  WRT  0
  STC 243
  WRT  0
  STC 110
  WRT  0
  STC 32
  WRT  0
  STC 49
  WRT  0
  STC 68
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 108
  WRT  0
  STC 32
  WRT  0
  STC 74
  WRT  0
  STC 117
  WRT  0
  STC 101
  WRT  0
  STC 103
  WRT  0
  STC 111
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 108
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 86
  WRT  0
  STC 105
  WRT  0
  STC 100
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 32
  WRT  0
  STC 67
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 119
  WRT  0
  STC 97
  WRT  0
  STC 121
  WRT  0
  STC 46
  WRT  0
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<put_line>
; -- Put STRING
<put>
  STC 104
  WRT  0
  STC 116
  WRT  0
  STC 116
  WRT  0
  STC 112
  WRT  0
  STC 115
  WRT  0
  STC 58
  WRT  0
  STC 47
  WRT  0
  STC 47
  WRT  0
  STC 101
  WRT  0
  STC 110
  WRT  0
  STC 46
  WRT  0
  STC 119
  WRT  0
  STC 105
  WRT  0
  STC 107
  WRT  0
  STC 105
  WRT  0
  STC 112
  WRT  0
  STC 101
  WRT  0
  STC 100
  WRT  0
  STC 105
  WRT  0
  STC 97
  WRT  0
  STC 46
  WRT  0
  STC 111
  WRT  0
  STC 114
  WRT  0
  STC 103
  WRT  0
  STC 47
  WRT  0
  STC 119
  WRT  0
  STC 105
  WRT  0
  STC 107
  WRT  0
  STC 105
  WRT  0
  STC 47
  WRT  0
  STC 67
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 119
  WRT  0
  STC 97
  WRT  0
  STC 121
  WRT  0
  STC 37
  WRT  0
  STC 50
  WRT  0
  STC 55
  WRT  0
  STC 115
  WRT  0
  STC 95
  WRT  0
  STC 71
  WRT  0
  STC 97
  WRT  0
  STC 109
  WRT  0
  STC 101
  WRT  0
  STC 95
  WRT  0
  STC 111
  WRT  0
  STC 102
  WRT  0
  STC 95
  WRT  0
  STC 76
  WRT  0
  STC 105
  WRT  0
  STC 102
  WRT  0
  STC 101
  WRT  0
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<put_line>
; -- Put STRING
<put>
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<Asignacion_a_variable_simple_elementos>
; -- Address of variable / parameter "elementos"
  SRF  0 85
  STC 80
  ASG
</Asignacion_a_variable_simple_elementos>
<procedure_call_inicializar>
<argument_1>
; --Variable / parameter "colonia"
  SRF  0  3
</argument_1>
  OSF 86  0 L1
</procedure_call_inicializar>
<procedure_call_mostrarcolonia>
<argument_1>
; -- Variable / parameter "colonia"
  SRF  0  3
  DRF
  SRF  0  4
  DRF
  SRF  0  5
  DRF
  SRF  0  6
  DRF
  SRF  0  7
  DRF
  SRF  0  8
  DRF
  SRF  0  9
  DRF
  SRF  0 10
  DRF
  SRF  0 11
  DRF
  SRF  0 12
  DRF
  SRF  0 13
  DRF
  SRF  0 14
  DRF
  SRF  0 15
  DRF
  SRF  0 16
  DRF
  SRF  0 17
  DRF
  SRF  0 18
  DRF
  SRF  0 19
  DRF
  SRF  0 20
  DRF
  SRF  0 21
  DRF
  SRF  0 22
  DRF
  SRF  0 23
  DRF
  SRF  0 24
  DRF
  SRF  0 25
  DRF
  SRF  0 26
  DRF
  SRF  0 27
  DRF
  SRF  0 28
  DRF
  SRF  0 29
  DRF
  SRF  0 30
  DRF
  SRF  0 31
  DRF
  SRF  0 32
  DRF
  SRF  0 33
  DRF
  SRF  0 34
  DRF
  SRF  0 35
  DRF
  SRF  0 36
  DRF
  SRF  0 37
  DRF
  SRF  0 38
  DRF
  SRF  0 39
  DRF
  SRF  0 40
  DRF
  SRF  0 41
  DRF
  SRF  0 42
  DRF
  SRF  0 43
  DRF
  SRF  0 44
  DRF
  SRF  0 45
  DRF
  SRF  0 46
  DRF
  SRF  0 47
  DRF
  SRF  0 48
  DRF
  SRF  0 49
  DRF
  SRF  0 50
  DRF
  SRF  0 51
  DRF
  SRF  0 52
  DRF
  SRF  0 53
  DRF
  SRF  0 54
  DRF
  SRF  0 55
  DRF
  SRF  0 56
  DRF
  SRF  0 57
  DRF
  SRF  0 58
  DRF
  SRF  0 59
  DRF
  SRF  0 60
  DRF
  SRF  0 61
  DRF
  SRF  0 62
  DRF
  SRF  0 63
  DRF
  SRF  0 64
  DRF
  SRF  0 65
  DRF
  SRF  0 66
  DRF
  SRF  0 67
  DRF
  SRF  0 68
  DRF
  SRF  0 69
  DRF
  SRF  0 70
  DRF
  SRF  0 71
  DRF
  SRF  0 72
  DRF
  SRF  0 73
  DRF
  SRF  0 74
  DRF
  SRF  0 75
  DRF
  SRF  0 76
  DRF
  SRF  0 77
  DRF
  SRF  0 78
  DRF
  SRF  0 79
  DRF
  SRF  0 80
  DRF
  SRF  0 81
  DRF
  SRF  0 82
  DRF
</argument_1>
  OSF 86  0 L43
</procedure_call_mostrarcolonia>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 83
  STC  1
  ASG
</Asignacion_a_variable_simple_i>
<Asignacion_a_variable_simple_iteraciones>
; -- Address of variable / parameter "iteraciones"
  SRF  0 84
  STC 50
  ASG
</Asignacion_a_variable_simple_iteraciones>
<while>
L49:
<condition>
; --Variable / parameter "i"
  SRF  0 83
  DRF
; --Variable / parameter "iteraciones"
  SRF  0 84
  DRF
  LTE
</condition>
  JMF L50
<while_instruction_block>
<procedure_call_siguientegeneracion>
<argument_1>
; --Variable / parameter "colonia"
  SRF  0  3
</argument_1>
  OSF 86  0 L39
</procedure_call_siguientegeneracion>
<procedure_call_mostrarcolonia>
<argument_1>
; -- Variable / parameter "colonia"
  SRF  0  3
  DRF
  SRF  0  4
  DRF
  SRF  0  5
  DRF
  SRF  0  6
  DRF
  SRF  0  7
  DRF
  SRF  0  8
  DRF
  SRF  0  9
  DRF
  SRF  0 10
  DRF
  SRF  0 11
  DRF
  SRF  0 12
  DRF
  SRF  0 13
  DRF
  SRF  0 14
  DRF
  SRF  0 15
  DRF
  SRF  0 16
  DRF
  SRF  0 17
  DRF
  SRF  0 18
  DRF
  SRF  0 19
  DRF
  SRF  0 20
  DRF
  SRF  0 21
  DRF
  SRF  0 22
  DRF
  SRF  0 23
  DRF
  SRF  0 24
  DRF
  SRF  0 25
  DRF
  SRF  0 26
  DRF
  SRF  0 27
  DRF
  SRF  0 28
  DRF
  SRF  0 29
  DRF
  SRF  0 30
  DRF
  SRF  0 31
  DRF
  SRF  0 32
  DRF
  SRF  0 33
  DRF
  SRF  0 34
  DRF
  SRF  0 35
  DRF
  SRF  0 36
  DRF
  SRF  0 37
  DRF
  SRF  0 38
  DRF
  SRF  0 39
  DRF
  SRF  0 40
  DRF
  SRF  0 41
  DRF
  SRF  0 42
  DRF
  SRF  0 43
  DRF
  SRF  0 44
  DRF
  SRF  0 45
  DRF
  SRF  0 46
  DRF
  SRF  0 47
  DRF
  SRF  0 48
  DRF
  SRF  0 49
  DRF
  SRF  0 50
  DRF
  SRF  0 51
  DRF
  SRF  0 52
  DRF
  SRF  0 53
  DRF
  SRF  0 54
  DRF
  SRF  0 55
  DRF
  SRF  0 56
  DRF
  SRF  0 57
  DRF
  SRF  0 58
  DRF
  SRF  0 59
  DRF
  SRF  0 60
  DRF
  SRF  0 61
  DRF
  SRF  0 62
  DRF
  SRF  0 63
  DRF
  SRF  0 64
  DRF
  SRF  0 65
  DRF
  SRF  0 66
  DRF
  SRF  0 67
  DRF
  SRF  0 68
  DRF
  SRF  0 69
  DRF
  SRF  0 70
  DRF
  SRF  0 71
  DRF
  SRF  0 72
  DRF
  SRF  0 73
  DRF
  SRF  0 74
  DRF
  SRF  0 75
  DRF
  SRF  0 76
  DRF
  SRF  0 77
  DRF
  SRF  0 78
  DRF
  SRF  0 79
  DRF
  SRF  0 80
  DRF
  SRF  0 81
  DRF
  SRF  0 82
  DRF
</argument_1>
  OSF 86  0 L43
</procedure_call_mostrarcolonia>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 83
; --Variable / parameter "i"
  SRF  0 83
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L49
L50:
</while>
  LVP
</juego_de_la_vida>
