<?xml version="1.0" encoding="UTF-8"?>
<qsort>
  ENP L0
<variable_declaration>
; -- Simple variable "n", type INT, level 0, address [3]
; -- Array variable "t", type INT, size 20, level 0, address [4:23]!
; -- Simple variable "iteraciones", type INT, level 0, address [24]
</variable_declaration>
<procedure>
L1:
; -- Ref array parameter "t", type INT, class REF, size 20, level 1, address [3]
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L2
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [4]
</variable_declaration>
L2:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L3:
<condition>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; --Variable / parameter "n"
  SRF  1  3
  DRF
  LT
</condition>
  JMF L4
<while_instruction_block>
<Asignacion_a_variable_simple_t>
; --Variable / parameter "i"
  SRF  0  4
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
; --Variable / parameter "n"
  SRF  1  3
  DRF
; --Variable / parameter "i"
  SRF  0  4
  DRF
  SBT
  ASG
</Asignacion_a_variable_simple_t>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  4
; --Variable / parameter "i"
  SRF  0  4
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L3
L4:
</while>
  CSF
</instruction_block>
</procedure>
<procedure>
L5:
; -- Val array parameter "t", type INT, class VAL, size20, level 1, address [3:22]
<recover_argument_1>
; --  Recover array val variable parameter "t" (number 1)
  SRF  0 22
  ASGI
  SRF  0 21
  ASGI
  SRF  0 20
  ASGI
  SRF  0 19
  ASGI
  SRF  0 18
  ASGI
  SRF  0 17
  ASGI
  SRF  0 16
  ASGI
  SRF  0 15
  ASGI
  SRF  0 14
  ASGI
  SRF  0 13
  ASGI
  SRF  0 12
  ASGI
  SRF  0 11
  ASGI
  SRF  0 10
  ASGI
  SRF  0  9
  ASGI
  SRF  0  8
  ASGI
  SRF  0  7
  ASGI
  SRF  0  6
  ASGI
  SRF  0  5
  ASGI
  SRF  0  4
  ASGI
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L6
<variable_declaration>
; -- Simple variable "i", type INT, level 1, address [23]
</variable_declaration>
L6:
<instruction_block>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 23
  STC  0
  ASG
</Asignacion_a_variable_simple_i>
<while>
L7:
<condition>
; --Variable / parameter "i"
  SRF  0 23
  DRF
; --Variable / parameter "n"
  SRF  1  3
  DRF
  LT
</condition>
  JMF L8
<while_instruction_block>
<put>
<put>
; --Variable / parameter "i"
  SRF  0 23
  DRF
; -- Initial address of array "t"
  SRF  0  3
  PLUS
  DRF
; -- Put INTEGER
  WRT  1
</put>
; -- Put STRING
<put>
  STC 32
  WRT  0
</put>
</put>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0 23
; --Variable / parameter "i"
  SRF  0 23
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_i>
</while_instruction_block>
  JMP L7
L8:
</while>
<put>
<put>
  STC 13
; -- Put CHAR
  WRT  0
</put>
<put>
  STC 10
; -- Put CHAR
  WRT  0
</put>
</put>
  CSF
</instruction_block>
</procedure>
<procedure>
L9:
; -- Simple parameter "i", type PROCEDURE, level 1, address [3]
; -- Simple parameter "j", type PROCEDURE, level 1, address [4]
<recover_argument_2>
; -- Recover simple val / ref variable parameter "j" (number 2)
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
; -- Recover simple val / ref variable parameter "i" (number 1)
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L10
<variable_declaration>
; -- Simple variable "k", type INT, level 1, address [5]
</variable_declaration>
L10:
<instruction_block>
<Asignacion_a_variable_simple_k>
; -- Address of variable / parameter "k"
  SRF  0  5
; --Variable / parameter "i"
  SRF  0  3
  DRF
  DRF
  ASG
</Asignacion_a_variable_simple_k>
<Asignacion_a_variable_simple_i>
; -- Address of variable / parameter "i"
  SRF  0  3
  DRF
; --Variable / parameter "j"
  SRF  0  4
  DRF
  DRF
  ASG
</Asignacion_a_variable_simple_i>
<Asignacion_a_variable_simple_j>
; -- Address of variable / parameter "j"
  SRF  0  4
  DRF
; --Variable / parameter "k"
  SRF  0  5
  DRF
  ASG
</Asignacion_a_variable_simple_j>
  CSF
</instruction_block>
</procedure>
<procedure>
L11:
; -- Simple parameter "i", type PROCEDURE, level 1, address [3]
; -- Simple parameter "j", type PROCEDURE, level 1, address [4]
<recover_argument_2>
; -- Recover simple val / ref variable parameter "j" (number 2)
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
; -- Recover simple val / ref variable parameter "i" (number 1)
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L12
<variable_declaration>
</variable_declaration>
L12:
<instruction_block>
<if-then>
<condition>
; --Variable / parameter "i"
  SRF  0  3
  DRF
  DRF
; --Variable / parameter "j"
  SRF  0  4
  DRF
  DRF
  GT
</condition>
  JMF L13
<then>
<procedure_call_intercambiar>
<argument_1>
; --Variable / parameter "i"
  SRF  0  3
  DRF
</argument_1>
<argument_2>
; --Variable / parameter "j"
  SRF  0  4
  DRF
</argument_2>
  OSF  5  1 L9
</procedure_call_intercambiar>
  JMP L14
</then>
<else>
L13:
</else>
L14:
</if-then>
  CSF
</instruction_block>
</procedure>
<procedure>
L15:
; -- Ref array parameter "t", type INT, class REF, size 20, level 1, address [3]
; -- Simple parameter "izq", type PROCEDURE, level 1, address [4]
; -- Simple parameter "der", type PROCEDURE, level 1, address [5]
; -- Simple parameter "me", type PROCEDURE, level 1, address [6]
<recover_argument_4>
; -- Recover simple val / ref variable parameter "me" (number 4)
  SRF  0  6
  ASGI
</recover_argument_4>
<recover_argument_3>
; -- Recover simple val / ref variable parameter "der" (number 3)
  SRF  0  5
  ASGI
</recover_argument_3>
<recover_argument_2>
; -- Recover simple val / ref variable parameter "izq" (number 2)
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L16
<variable_declaration>
; -- Simple variable "p", type INT, level 1, address [7]
; -- Simple variable "k", type INT, level 1, address [8]
</variable_declaration>
L16:
<instruction_block>
<Asignacion_a_variable_simple_p>
; -- Address of variable / parameter "p"
  SRF  0  7
; --Variable / parameter "izq"
  SRF  0  4
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
  DRF
  ASG
</Asignacion_a_variable_simple_p>
<Asignacion_a_variable_simple_k>
; -- Address of variable / parameter "k"
  SRF  0  8
; --Variable / parameter "izq"
  SRF  0  4
  DRF
  ASG
</Asignacion_a_variable_simple_k>
<Asignacion_a_variable_simple_me>
; -- Address of variable / parameter "me"
  SRF  0  6
  DRF
; --Variable / parameter "der"
  SRF  0  5
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_me>
<Asignacion_a_variable_simple_k>
; -- Address of variable / parameter "k"
  SRF  0  8
; --Variable / parameter "k"
  SRF  0  8
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_k>
<while>
L17:
<condition>
; --Variable / parameter "k"
  SRF  0  8
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "p"
  SRF  0  7
  DRF
  LTE
; --Variable / parameter "k"
  SRF  0  8
  DRF
; --Variable / parameter "der"
  SRF  0  5
  DRF
  LT
  AND
</condition>
  JMF L18
<while_instruction_block>
<Asignacion_a_variable_simple_k>
; -- Address of variable / parameter "k"
  SRF  0  8
; --Variable / parameter "k"
  SRF  0  8
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_k>
</while_instruction_block>
  JMP L17
L18:
</while>
<Asignacion_a_variable_simple_me>
; -- Address of variable / parameter "me"
  SRF  0  6
  DRF
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
  STC  1
  SBT
  ASG
</Asignacion_a_variable_simple_me>
<while>
L19:
<condition>
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "p"
  SRF  0  7
  DRF
  GT
</condition>
  JMF L20
<while_instruction_block>
<Asignacion_a_variable_simple_me>
; -- Address of variable / parameter "me"
  SRF  0  6
  DRF
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
  STC  1
  SBT
  ASG
</Asignacion_a_variable_simple_me>
</while_instruction_block>
  JMP L19
L20:
</while>
<while>
L21:
<condition>
; --Variable / parameter "k"
  SRF  0  8
  DRF
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
  LT
</condition>
  JMF L22
<while_instruction_block>
<procedure_call_intercambiar>
<argument_1>
; --Variable / parameter "k"
  SRF  0  8
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
</argument_1>
<argument_2>
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
</argument_2>
  OSF  9  1 L9
</procedure_call_intercambiar>
<Asignacion_a_variable_simple_k>
; -- Address of variable / parameter "k"
  SRF  0  8
; --Variable / parameter "k"
  SRF  0  8
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_k>
<while>
L23:
<condition>
; --Variable / parameter "k"
  SRF  0  8
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "p"
  SRF  0  7
  DRF
  LTE
</condition>
  JMF L24
<while_instruction_block>
<Asignacion_a_variable_simple_k>
; -- Address of variable / parameter "k"
  SRF  0  8
; --Variable / parameter "k"
  SRF  0  8
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_k>
</while_instruction_block>
  JMP L23
L24:
</while>
<Asignacion_a_variable_simple_me>
; -- Address of variable / parameter "me"
  SRF  0  6
  DRF
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
  STC  1
  SBT
  ASG
</Asignacion_a_variable_simple_me>
<while>
L25:
<condition>
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
  DRF
; --Variable / parameter "p"
  SRF  0  7
  DRF
  GT
</condition>
  JMF L26
<while_instruction_block>
<Asignacion_a_variable_simple_me>
; -- Address of variable / parameter "me"
  SRF  0  6
  DRF
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
  STC  1
  SBT
  ASG
</Asignacion_a_variable_simple_me>
</while_instruction_block>
  JMP L25
L26:
</while>
</while_instruction_block>
  JMP L21
L22:
</while>
<procedure_call_intercambiar>
<argument_1>
; --Variable / parameter "izq"
  SRF  0  4
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
</argument_1>
<argument_2>
; --Variable / parameter "me"
  SRF  0  6
  DRF
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
</argument_2>
  OSF  9  1 L9
</procedure_call_intercambiar>
  CSF
</instruction_block>
</procedure>
<procedure>
L27:
; -- Ref array parameter "t", type INT, class REF, size 20, level 1, address [3]
; -- Simple parameter "izq", type PROCEDURE, level 1, address [4]
; -- Simple parameter "der", type PROCEDURE, level 1, address [5]
<recover_argument_3>
; -- Recover simple val / ref variable parameter "der" (number 3)
  SRF  0  5
  ASGI
</recover_argument_3>
<recover_argument_2>
; -- Recover simple val / ref variable parameter "izq" (number 2)
  SRF  0  4
  ASGI
</recover_argument_2>
<recover_argument_1>
  SRF  0  3
  ASGI
</recover_argument_1>
  JMP L28
<variable_declaration>
; -- Simple variable "me", type INT, level 1, address [6]
</variable_declaration>
L28:
<instruction_block>
<if-then>
<condition>
; --Variable / parameter "der"
  SRF  0  5
  DRF
; --Variable / parameter "izq"
  SRF  0  4
  DRF
  GT
</condition>
  JMF L29
<then>
<procedure_call_mostrar>
<argument_1>
; -- Variable / parameter "t"
  SRF  0  3
  DRF
  STC  0
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  1
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  2
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  3
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  4
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  5
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  6
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  7
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  8
  PLUS
  DRF
  SRF  0  3
  DRF
  STC  9
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 10
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 11
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 12
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 13
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 14
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 15
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 16
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 17
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 18
  PLUS
  DRF
  SRF  0  3
  DRF
  STC 19
  PLUS
  DRF
</argument_1>
  OSF  7  1 L5
</procedure_call_mostrar>
<if-then>
<condition>
; --Variable / parameter "der"
  SRF  0  5
  DRF
; --Variable / parameter "izq"
  SRF  0  4
  DRF
  SBT
  STC  1
  EQ
</condition>
  JMF L30
<then>
<procedure_call_ordenar>
<argument_1>
; --Variable / parameter "izq"
  SRF  0  4
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
</argument_1>
<argument_2>
; --Variable / parameter "der"
  SRF  0  5
  DRF
; -- Initial address of array "t"
  SRF  0  3
  DRF
  PLUS
</argument_2>
  OSF  7  1 L11
</procedure_call_ordenar>
  JMP L31
</then>
<else>
L30:
<procedure_call_divide>
<argument_1>
; --Variable / parameter "t"
  SRF  0  3
  DRF
</argument_1>
<argument_2>
; --Variable / parameter "izq"
  SRF  0  4
  DRF
</argument_2>
<argument_3>
; --Variable / parameter "der"
  SRF  0  5
  DRF
</argument_3>
<argument_4>
; --Variable / parameter "me"
  SRF  0  6
</argument_4>
  OSF  7  1 L15
</procedure_call_divide>
<procedure_call_quicksort>
<argument_1>
; --Variable / parameter "t"
  SRF  0  3
  DRF
</argument_1>
<argument_2>
; --Variable / parameter "izq"
  SRF  0  4
  DRF
</argument_2>
<argument_3>
; --Variable / parameter "me"
  SRF  0  6
  DRF
  STC  1
  SBT
</argument_3>
  OSF  7  1 L27
</procedure_call_quicksort>
<procedure_call_quicksort>
<argument_1>
; --Variable / parameter "t"
  SRF  0  3
  DRF
</argument_1>
<argument_2>
; --Variable / parameter "me"
  SRF  0  6
  DRF
  STC  1
  PLUS
</argument_2>
<argument_3>
; --Variable / parameter "der"
  SRF  0  5
  DRF
</argument_3>
  OSF  7  1 L27
</procedure_call_quicksort>
<Asignacion_a_variable_simple_iteraciones>
; -- Address of variable / parameter "iteraciones"
  SRF  1 24
; --Variable / parameter "iteraciones"
  SRF  1 24
  DRF
  STC  1
  PLUS
  ASG
</Asignacion_a_variable_simple_iteraciones>
</else>
L31:
</if-then>
  JMP L32
</then>
<else>
L29:
</else>
L32:
</if-then>
  CSF
</instruction_block>
</procedure>
L0:
<put_line>
; -- Put STRING
<put>
  STC 73
  WRT  0
  STC 108
  WRT  0
  STC 117
  WRT  0
  STC 115
  WRT  0
  STC 116
  WRT  0
  STC 114
  WRT  0
  STC 97
  WRT  0
  STC 99
  WRT  0
  STC 105
  WRT  0
  STC 243
  WRT  0
  STC 110
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 108
  WRT  0
  STC 32
  WRT  0
  STC 102
  WRT  0
  STC 117
  WRT  0
  STC 110
  WRT  0
  STC 99
  WRT  0
  STC 105
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 97
  WRT  0
  STC 109
  WRT  0
  STC 105
  WRT  0
  STC 101
  WRT  0
  STC 110
  WRT  0
  STC 116
  WRT  0
  STC 111
  WRT  0
  STC 32
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 108
  WRT  0
  STC 32
  WRT  0
  STC 97
  WRT  0
  STC 108
  WRT  0
  STC 103
  WRT  0
  STC 111
  WRT  0
  STC 114
  WRT  0
  STC 105
  WRT  0
  STC 116
  WRT  0
  STC 109
  WRT  0
  STC 111
  WRT  0
  STC 32
  WRT  0
  STC 113
  WRT  0
  STC 117
  WRT  0
  STC 105
  WRT  0
  STC 99
  WRT  0
  STC 107
  WRT  0
  STC 115
  WRT  0
  STC 111
  WRT  0
  STC 114
  WRT  0
  STC 116
  WRT  0
  STC 32
  WRT  0
  STC 112
  WRT  0
  STC 97
  WRT  0
  STC 114
  WRT  0
  STC 97
  WRT  0
  STC 32
  WRT  0
  STC 111
  WRT  0
  STC 114
  WRT  0
  STC 100
  WRT  0
  STC 101
  WRT  0
  STC 110
  WRT  0
  STC 97
  WRT  0
  STC 114
  WRT  0
  STC 32
  WRT  0
  STC 50
  WRT  0
  STC 48
  WRT  0
  STC 32
  WRT  0
  STC 101
  WRT  0
  STC 110
  WRT  0
  STC 116
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 111
  WRT  0
  STC 115
  WRT  0
  STC 46
  WRT  0
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<put_line>
; -- Put STRING
<put>
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<Asignacion_a_variable_simple_n>
; -- Address of variable / parameter "n"
  SRF  0  3
  STC 20
  ASG
</Asignacion_a_variable_simple_n>
<Asignacion_a_variable_simple_iteraciones>
; -- Address of variable / parameter "iteraciones"
  SRF  0 24
  STC  0
  ASG
</Asignacion_a_variable_simple_iteraciones>
<procedure_call_inicializar>
<argument_1>
; --Variable / parameter "t"
  SRF  0  4
</argument_1>
  OSF 25  0 L1
</procedure_call_inicializar>
<procedure_call_quicksort>
<argument_1>
; --Variable / parameter "t"
  SRF  0  4
</argument_1>
<argument_2>
  STC  0
</argument_2>
<argument_3>
; --Variable / parameter "n"
  SRF  0  3
  DRF
  STC  1
  SBT
</argument_3>
  OSF 25  0 L27
</procedure_call_quicksort>
<put_line>
; -- Put STRING
<put>
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
<put_line>
; -- Put STRING
<put>
  STC 73
  WRT  0
  STC 116
  WRT  0
  STC 101
  WRT  0
  STC 114
  WRT  0
  STC 97
  WRT  0
  STC 99
  WRT  0
  STC 105
  WRT  0
  STC 111
  WRT  0
  STC 110
  WRT  0
  STC 101
  WRT  0
  STC 115
  WRT  0
  STC 58
  WRT  0
  STC 32
  WRT  0
</put>
<put>
; --Variable / parameter "iteraciones"
  SRF  0 24
  DRF
; -- Put INTEGER
  WRT  1
</put>
; -- CR/LF
  STC 13
  WRT  0
  STC 10
  WRT  0
</put_line>
  LVP
</qsort>
